apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'

buildscript {
    def springBootVersion = "1.1.0.BUILD-SNAPSHOT"

    repositories {
        maven {
            url = "http://repo.spring.io/repo"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.springframework:springloaded:1.2.0.RELEASE"
        classpath 'com.googlecode.flyway:flyway-gradle-plugin:2.3.1'
    }
}

repositories {
    maven {
        url = "http://repo.spring.io/repo"
    }
    mavenCentral()
}

test {
    systemProperties["spring.profiles.active"] = "test"
}

dependencies {
    def springBootVersion = "1.1.0.BUILD-SNAPSHOT"

    compile "org.springframework.boot:spring-boot:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.codehaus.groovy:groovy-all:2.3.1"
    compile "postgresql:postgresql:9.1-901.jdbc4"

    testCompile "org.easytesting:fest-assert:1.4"
    testCompile "org.fluentlenium:fluentlenium-festassert:0.10.0"
    testCompile 'junit:junit:4.11'
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile 'com.googlecode.flyway:flyway-core:2.3.1'
}

apply plugin: 'flyway'
flyway {
    url = "jdbc:postgresql://localhost/project_development"
    user = 'pivotal'
    password = ''
}

task flywayCreate << {
    def file = new File("./src/main/resources/db/migration/V${new Date().getTime()}__${title}.sql")
    file.createNewFile()
}

apply plugin: 'idea'
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

